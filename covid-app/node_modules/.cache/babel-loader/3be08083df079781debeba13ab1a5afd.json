{"ast":null,"code":"var _jsxFileName = \"/Users/Aidan/Desktop/covid-app/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    console.log(dailyData);\n    fetchAPI();\n  });\n  const lineChart = dailyData.length !== 0 ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '33333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255,0,0,0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [confirmed, recovered, deaths]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/Aidan/Desktop/covid-app/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","console","log","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAC;AAACC,IAAAA,SAAD;AAAWC,IAAAA,SAAX;AAAqBC,IAAAA;AAArB,GAAN;AAAmCC,EAAAA;AAAnC,CAAD,KAAiD;AAC3D,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,CAAC,MAAMX,cAAc,EAArB,CAAZ;AACH,KAFD;;AAGAa,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACAE,IAAAA,QAAQ;AACX,GANQ,CAAT;AAQA,QAAMG,SAAS,GACXL,SAAS,CAACM,MAAV,KAAoB,CAApB,gBAEA,oBAAC,IAAD;AACC,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAEP,SAAS,CAACQ,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAYA,IAA1B,CADN;AAGFC,MAAAA,QAAQ,EAAE,CAAC;AACRf,QAAAA,IAAI,EAAEK,SAAS,CAACQ,GAAV,CAAc,CAAC;AAACZ,UAAAA;AAAD,SAAD,KAAiBA,SAA/B,CADE;AAERe,QAAAA,KAAK,EAAE,UAFC;AAGRC,QAAAA,WAAW,EAAC,SAHJ;AAIRC,QAAAA,IAAI,EAAE;AAJE,OAAD,EAKR;AACClB,QAAAA,IAAI,EAAEK,SAAS,CAACQ,GAAV,CAAc,CAAC;AAACV,UAAAA;AAAD,SAAD,KAAYA,MAA1B,CADP;AAECa,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAC,KAHb;AAICE,QAAAA,eAAe,EAAE,mBAJlB;AAKCD,QAAAA,IAAI,EAAE;AALP,OALQ;AAHR,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,GAmBM,IApBV;AAuBA,QAAME,QAAQ,GACVnB,SAAS,gBACP,oBAAC,GAAD;AACE,IAAA,IAAI,EAAE;AACJW,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADJ;AAEJG,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,QADT;AAEEG,QAAAA,eAAe,EAAE,CAAC,sBAAD,EAAyB,sBAAzB,EAAiD,sBAAjD,CAFnB;AAGEnB,QAAAA,IAAI,EAAE,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,MAAvB;AAHR,OADQ;AAFN,KADR;AAWE,IAAA,OAAO,EAAE;AACPkB,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADD;AAEPC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,EAAG,oBAAmBpB,OAAQ;AAAnD;AAFA,KAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,GAiBL,IAlBR;AAqBA,sBACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAAC2B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKrB,OAAO,GAAEgB,QAAF,GAAaV,SADzB,CADJ;AAMH,CA7DD;;AA8DA,eAAeX,KAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {fetchDailyData} from '../../api';\nimport {Line, Bar} from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({data:{confirmed,recovered,deaths},country}) => {\n    const [dailyData,setDailyData]= useState([]);\n    \n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        console.log(dailyData);\n        fetchAPI();\n    });\n\n    const lineChart = (\n        dailyData.length !==0\n        ? (\n        <Line\n         data={{\n             labels: dailyData.map(({date}) => date),\n             \n             datasets: [{\n                data: dailyData.map(({confirmed}) => confirmed),\n                label: 'Infected',\n                borderColor:'33333ff',\n                fill: true\n             },{\n                data: dailyData.map(({deaths})=>deaths),\n                label: 'Deaths',\n                borderColor:'red',\n                backgroundColor: 'rgba(255,0,0,0.5)',\n                fill: true\n             }],\n         }}\n        />) : null\n    );\n    \n    const barChart = (\n        confirmed ? (\n          <Bar\n            data={{\n              labels: ['Infected', 'Recovered', 'Deaths'],\n              datasets: [\n                {\n                  label: 'People',\n                  backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                  data: [confirmed, recovered, deaths],\n                },\n              ],\n            }}\n            options={{\n              legend: { display: false },\n              title: { display: true, text: `Current state in ${country}` },\n            }}\n          />\n        ) : null\n      );\n    \n    return (\n        <div className={styles.container}>\n            {country? barChart : lineChart}\n        </div>\n    )\n\n}\nexport default Chart;"]},"metadata":{},"sourceType":"module"}